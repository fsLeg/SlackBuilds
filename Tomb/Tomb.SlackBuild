#!/bin/sh

# Slackware build script for Tomb

# Copyright 2014 Vladislav Borisov Moscow, Russia
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR "AS IS" AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

PRGNAM=Tomb
VERSION=${VERSION:-2.6}
BUILD=${BUILD:-1}
TAG=${TAG:-fsleg}

# Tomb is just a shell script, so there's nothing to build
ARCH="noarch"

# If you want to run tests, supply TEST=yes
TEST=${TEST:-no}

CWD=$(pwd)
TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

set -e # Exit on most errors

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP

rm -rf $PRGNAM-$VERSION
tar xvf $CWD/$PRGNAM-$VERSION.tar.gz
cd $PRGNAM-$VERSION
chown -R root:root .
find -L . \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
  -o -perm 511 \) -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
 -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

if [ "${TEST}" == "yes" ]; then
  sed -i 's/\/usr\/bin\/zsh/\/bin\/zsh/' extras/test/runtests
  make test
fi

make install DESTDIR=$PKG PREFIX=/usr MANDIR=/usr/man

# Install translations
cd extras/translations
make install DESTDIR=$PKG PREFIX=/usr
cd ../..

if [ "${KDF}" == "yes" ]; then
  cd extras/kdf-keys
  make
  make install DESTDIR=$PKG PREFIX=/usr
  cd ../..
fi

if [ "${GTK_TRAY}" == "yes" ]; then
  cd extras/gtk-tray
  make
  make install DESTDIR=$PKG PREFIX=/usr
  install -Dm755 tomb-gtk-tray $PKG/usr/bin
  mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION/gtk-tray
  cp README.md $PKG/usr/doc/$PRGNAM-$VERSION/gtk-tray/
  cd ../..
fi

if [ "${QT_TRAY}" == "yes" ]; then
  cd extras/qt-tray
  qmake-qt5
  make
  install -Dm755 tomb-qt-tray $PKG/usr/bin
  mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION/qt-tray
  cp README.txt $PKG/usr/doc/$PRGNAM-$VERSION/qt-tray/
  cd ../..
fi

if [ "${GUI}" == "yes" ]; then
  cd extras/gtomb
  patch -p1 < ${CWD}/paths.patch
  install -Dm755 gtomb $PKG/usr/bin
  cd ../..
fi

# Compress man pages
find $PKG/usr/man -type f -exec gzip -9 {} \;
for i in $( find $PKG/usr/man -type l ) ; do ln -s $( readlink $i ).gz $i.gz ; rm $i ; done

# Copy program documentation into the package
mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
cp -aR \
  doc/*.{pdf,txt,org} \
  AUTHORS.txt ChangeLog.txt COPYING.txt INSTALL.txt KNOWN_BUGS.txt README.txt \
  $PKG/usr/doc/$PRGNAM-$VERSION
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild

# Copy the slack-desc into ./install
mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.${PKGTYPE:-txz}
